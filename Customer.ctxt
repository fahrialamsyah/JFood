#BlueJ class context
comment0.target=Customer
comment0.text=\r\n\ Ini\ adalah\ class\ customer\ yang\ terdiri\ dari\ id,\ name,\ email\ ,\ password\ ,\ joinDate\ sebagai\ atribut\r\n\ Class\ merupakan\ sebuah\ blueprint\ dari\ sebuah\ objek\ yang\ merepresentasikan\ konsep\ objek\r\n\r\n\ @author\ (Fahri\ Alamsyah)\r\n\ @version\ (27-02-2020)\r\n
comment1.params=id\ name\ email\ password\ joinDate
comment1.target=Customer(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Customer\r\n\ Constructor\ sama\ dengan\ metode\ yang\ dipanggil\ ketika\ sebuah\ objek\ di-instance.\r\n\ Nama\ konstruktor\ harus\ sama\ dengan\ nama\ class\ ,\ dan\ tidak\ dapat\ menghasilkan\ nilai\ balik\ \r\n\ dan\ tidak\ memiliki\ tipe\ nilai\ balik\ pada\ header\ metode.\r\n\ \r\n\ Modifier\ public\ akan\ membuat\ member\ dan\ class\ bisa\ di\ akses\ dari\ mana\ saja.\r\n\ @param\ id\ untuk\ menginisialisasikan\ input\ id\ baru\r\n\ @param\ name\ untuk\ menginisialisasikan\ input\ name\ baru\r\n\ @param\ email\ untuk\ menginisialisasikan\ input\ email\ baru\r\n\ @param\ password\ untuk\ menginisialisasikan\ input\ password\ baru\r\n\ @param\ joinDate\ untuk\ menginisialisasikan\ input\ joinDate\ baru\r\n
comment10.params=password
comment10.target=java.lang.String\ setPassword(java.lang.String)
comment10.text=\r\n\ Setter\ password\ for\ Customer\r\n\ @return\ password\ untuk\ mengecek\ variabel\ email\ ke\ variabel\ instance\r\n
comment11.params=joindate
comment11.target=java.lang.String\ setJoinDate(java.lang.String)
comment11.text=\r\n\ Setter\ joinDate\ for\ Customer\r\n\ @return\ joinDate\ untuk\ mengecek\ variabel\ email\ ke\ variabel\ instance\r\n
comment12.params=
comment12.target=void\ printData()
comment12.text=\r\n\ Print\ data\ yang\ diinginkan\ \r\n
comment2.params=
comment2.target=int\ getId()
comment2.text=\r\n\ Getter\ sendiri\ memiliki\ nilai\ kembalian\ sesuai\ dengan\ tipe\ data\ yang\ akan\ diambil.\r\n\ Getter\ id\ for\ Customer\r\n\ @return\ id\ untuk\ mengecek\ variabel\ id\ ke\ variabel\ instance\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ Getter\ name\ for\ Customer\r\n\ @return\ name\ untuk\ mengecek\ variabel\ name\ ke\ variabel\ instance\r\n
comment4.params=
comment4.target=java.lang.String\ getEmail()
comment4.text=\r\n\ Getter\ email\ for\ Customer\r\n\ @return\ id\ untuk\ mengecek\ variabel\ id\ ke\ variabel\ instance\r\n
comment5.params=
comment5.target=java.lang.String\ getPassword()
comment5.text=\r\n\ Getter\ password\ for\ Customer\r\n\ @return\ password\ untuk\ mengecek\ variabel\ password\ ke\ variabel\ instance\r\n
comment6.params=
comment6.target=java.lang.String\ getJoinDate()
comment6.text=\r\n\ Getter\ joinDate\ for\ Customer\r\n\ @return\ joinDate\ untuk\ mengecek\ variabel\ joinDate\ ke\ variabel\ instance\r\n
comment7.params=id
comment7.target=void\ setId(int)
comment7.text=\r\n\ Method\ setter\ tidak\ memiliki\ nilai\ kembalian\ void\ (kosong).\ Karena\ tugasnya\ hanya\ untuk\ mengisi\ data\ ke\ dalam\ atribut.\ \r\n\ Setter\ id\ for\ Customer\r\n\ @param\ id\ untuk\ set\ ke\ instance\ variabel\ id\r\n
comment8.params=name
comment8.target=java.lang.String\ setName(java.lang.String)
comment8.text=\r\n\ Setter\ name\ for\ Customer\r\n\ @return\ name\ untuk\ mengecek\ variabel\ name\ ke\ variabel\ instance\r\n
comment9.params=email
comment9.target=java.lang.String\ setEmail(java.lang.String)
comment9.text=\r\n\ Setter\ email\ for\ Customer\r\n\ @return\ email\ untuk\ mengecek\ variabel\ email\ ke\ variabel\ instance\r\n
numComments=13
